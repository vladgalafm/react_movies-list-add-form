{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/ErrorMessage/ErrorMessage.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","ErrorMessage","message","NewMovie","state","titleValid","titleError","imgUrlValid","imgUrlError","imdbUrlValid","imdbUrlError","imdbIdValid","imdbIdError","onInputChange","event","validateInput","target","setState","name","value","onBlurHandle","isRequired","required","regexTemplate","prevState","test","onFormSubmit","preventDefault","props","onAdd","clearForm","onSubmit","this","noValidate","type","placeholder","onChange","onBlur","rows","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"+yEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCtBGK,G,MAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAC1B,0BAAMZ,UAAU,eAAeY,KCApBC,G,MAAb,4MACEC,MAAQ,CACNlB,MAAO,GACPmB,YAAY,EACZC,WAAY,GACZnB,YAAa,GACbC,OAAQ,GACRmB,aAAa,EACbC,YAAa,GACbnB,QAAS,GACToB,cAAc,EACdC,aAAc,GACdV,OAAQ,GACRW,aAAa,EACbC,YAAa,IAdjB,EAiBEC,cAAgB,SAACC,GACf,EAAKC,cAAcD,EAAME,QAEzB,EAAKC,SAAL,eACGH,EAAME,OAAOE,KAAOJ,EAAME,OAAOG,SArBxC,EAyBEC,aAAe,SAACN,GACd,EAAKC,cAAcD,EAAME,SA1B7B,EA6BED,cAAgB,SAACC,GAAY,IACnBE,EAASF,EAATE,KACFG,EAAaL,EAAOM,SAClBH,EAAUH,EAAVG,MAEFI,EAAgB,qKAEtB,EAAKN,UAAS,SAACO,GAAe,IAAD,EACD,EAQS,EARnC,OAAIH,IAAeF,GACV,EAAP,2BACMD,EADN,UACoB,GADpB,wBAEMA,EAFN,SAEoB,qBAFpB,GAMY,WAATA,GAA8B,YAATA,GAClBK,EAAcE,KAAKN,IAOpB,EAAP,2BACMD,EADN,UACoB,GADpB,wBAEMA,EAFN,SAEoB,IAFpB,IANS,EAAP,2BACMA,EADN,UACoB,GADpB,wBAEMA,EAFN,SAEoB,eAFpB,OA9CR,EA2DEQ,aAAe,SAACZ,GACdA,EAAMa,iBAED,EAAKvB,MAAMC,YAAe,EAAKD,MAAMG,aACpC,EAAKH,MAAMK,cAAiB,EAAKL,MAAMO,cAI7C,EAAKiB,MAAMC,MAAM,CACf3C,MAAO,EAAKkB,MAAMlB,MAClBC,YAAa,EAAKiB,MAAMjB,YACxBC,OAAQ,EAAKgB,MAAMhB,OACnBC,QAAS,EAAKe,MAAMf,QACpBW,OAAQ,EAAKI,MAAMJ,SAGrB,EAAK8B,cA3ET,EA8EEA,UAAY,WACV,EAAKb,SAAS,CACZ/B,MAAO,GACPmB,YAAY,EACZC,WAAY,GACZnB,YAAa,GACbC,OAAQ,GACRmB,aAAa,EACbC,YAAa,GACbnB,QAAS,GACToB,cAAc,EACdC,aAAc,GACdV,OAAQ,GACRW,aAAa,EACbC,YAAa,MA5FnB,uDAiGI,OACE,0BACEtB,UAAU,OACVyC,SAAUC,KAAKN,aACfO,YAAU,GAEV,wBAAI3C,UAAU,eAAd,gBACA,yBAAKA,UAAU,eACb,2BACEA,UAAS,sBAAiB0C,KAAK5B,MAAME,YAChC,sBACL4B,KAAK,OACLC,YAAY,QACZjB,KAAK,QACLC,MAAOa,KAAK5B,MAAMlB,MAClBkD,SAAUJ,KAAKnB,cACfwB,OAAQL,KAAKZ,aACbE,UAAQ,IAGRU,KAAK5B,MAAME,YACR,kBAAC,EAAD,CAAcJ,QAAS8B,KAAK5B,MAAME,cAGzC,yBAAKhB,UAAU,eACb,8BACEA,UAAU,cACV6C,YAAY,cACZG,KAAM,EACNpB,KAAK,cACLC,MAAOa,KAAK5B,MAAMjB,YAClBiD,SAAUJ,KAAKnB,iBAGnB,yBAAKvB,UAAU,eACb,2BACEA,UAAS,sBAAiB0C,KAAK5B,MAAMI,aAChC,sBACL0B,KAAK,OACLC,YAAY,aACZjB,KAAK,SACLC,MAAOa,KAAK5B,MAAMhB,OAClBgD,SAAUJ,KAAKnB,cACfwB,OAAQL,KAAKZ,aACbE,UAAQ,IAGRU,KAAK5B,MAAMI,aACR,kBAAC,EAAD,CAAcN,QAAS8B,KAAK5B,MAAMI,eAGzC,yBAAKlB,UAAU,eACb,2BACEA,UAAS,sBAAiB0C,KAAK5B,MAAMM,cAChC,sBACLwB,KAAK,OACLC,YAAY,oBACZjB,KAAK,UACLC,MAAOa,KAAK5B,MAAMf,QAClB+C,SAAUJ,KAAKnB,cACfwB,OAAQL,KAAKZ,aACbE,UAAQ,IAGRU,KAAK5B,MAAMM,cACR,kBAAC,EAAD,CAAcR,QAAS8B,KAAK5B,MAAMM,gBAGzC,yBAAKpB,UAAU,eACb,2BACEA,UAAS,sBAAiB0C,KAAK5B,MAAMQ,aAChC,sBACLsB,KAAK,OACLC,YAAY,kBACZjB,KAAK,SACLC,MAAOa,KAAK5B,MAAMJ,OAClBoC,SAAUJ,KAAKnB,cACfwB,OAAQL,KAAKZ,aACbE,UAAQ,IAGRU,KAAK5B,MAAMQ,aACR,kBAAC,EAAD,CAAcV,QAAS8B,KAAK5B,MAAMQ,eAGzC,4BACEtB,UAAU,eACV4C,KAAK,SACLK,UACGP,KAAK5B,MAAMC,aAAe2B,KAAK5B,MAAMG,cAClCyB,KAAK5B,MAAMK,eAAiBuB,KAAK5B,MAAMO,aAL/C,aAtLR,GAA8B6B,c,OCCjBC,EAAb,4MACErC,MAAQ,CACNR,OAAQ8C,GAFZ,EAKEC,SAAW,SAAC7C,GACV,EAAKmB,UAAS,SAAAO,GAAS,MAAK,CAC1B5B,OAAO,GAAD,mBAAM4B,EAAU5B,QAAhB,CAAwBE,SAPpC,uDAWY,IACAF,EAAWoC,KAAK5B,MAAhBR,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUuC,MAAOG,KAAKW,iBApBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d298b01e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ErrorMessage.scss';\n\nexport const ErrorMessage = ({ message }) => (\n  <span className=\"form__error\">{message}</span>\n);\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage } from '../ErrorMessage/ErrorMessage';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    titleValid: false,\n    titleError: '',\n    description: '',\n    imgUrl: '',\n    imgUrlValid: false,\n    imgUrlError: '',\n    imdbUrl: '',\n    imdbUrlValid: false,\n    imdbUrlError: '',\n    imdbId: '',\n    imdbIdValid: false,\n    imdbIdError: '',\n  };\n\n  onInputChange = (event) => {\n    this.validateInput(event.target);\n\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  onBlurHandle = (event) => {\n    this.validateInput(event.target);\n  };\n\n  validateInput = (target) => {\n    const { name } = target;\n    const isRequired = target.required;\n    const { value } = target;\n    // eslint-disable-next-line max-len\n    const regexTemplate = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    this.setState((prevState) => {\n      if (isRequired && !value) {\n        return ({\n          [`${name}Valid`]: false,\n          [`${name}Error`]: 'Field is required',\n        });\n      }\n\n      if ((name === 'imgUrl' || name === 'imdbUrl')\n          && !regexTemplate.test(value)) {\n        return ({\n          [`${name}Valid`]: false,\n          [`${name}Error`]: 'Invalid URL',\n        });\n      }\n\n      return ({\n        [`${name}Valid`]: true,\n        [`${name}Error`]: '',\n      });\n    });\n  };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (!this.state.titleValid || !this.state.imgUrlValid\n      || !this.state.imdbUrlValid || !this.state.imdbIdValid) {\n      return;\n    }\n\n    this.props.onAdd({\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    });\n\n    this.clearForm();\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      titleValid: false,\n      titleError: '',\n      description: '',\n      imgUrl: '',\n      imgUrlValid: false,\n      imgUrlError: '',\n      imdbUrl: '',\n      imdbUrlValid: false,\n      imdbUrlError: '',\n      imdbId: '',\n      imdbIdValid: false,\n      imdbIdError: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.onFormSubmit}\n        noValidate\n      >\n        <h2 className=\"form__title\">Add new film</h2>\n        <div className=\"form__field\">\n          <input\n            className={`form__input ${this.state.titleError\n              && 'form__input--error'}`}\n            type=\"text\"\n            placeholder=\"Title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.onInputChange}\n            onBlur={this.onBlurHandle}\n            required\n          />\n          {\n            this.state.titleError\n            && <ErrorMessage message={this.state.titleError} />\n          }\n        </div>\n        <div className=\"form__field\">\n          <textarea\n            className=\"form__input\"\n            placeholder=\"Description\"\n            rows={3}\n            name=\"description\"\n            value={this.state.description}\n            onChange={this.onInputChange}\n          />\n        </div>\n        <div className=\"form__field\">\n          <input\n            className={`form__input ${this.state.imgUrlError\n              && 'form__input--error'}`}\n            type=\"text\"\n            placeholder=\"Image link\"\n            name=\"imgUrl\"\n            value={this.state.imgUrl}\n            onChange={this.onInputChange}\n            onBlur={this.onBlurHandle}\n            required\n          />\n          {\n            this.state.imgUrlError\n            && <ErrorMessage message={this.state.imgUrlError} />\n          }\n        </div>\n        <div className=\"form__field\">\n          <input\n            className={`form__input ${this.state.imdbUrlError\n              && 'form__input--error'}`}\n            type=\"text\"\n            placeholder=\"Film link on IMDb\"\n            name=\"imdbUrl\"\n            value={this.state.imdbUrl}\n            onChange={this.onInputChange}\n            onBlur={this.onBlurHandle}\n            required\n          />\n          {\n            this.state.imdbUrlError\n            && <ErrorMessage message={this.state.imdbUrlError} />\n          }\n        </div>\n        <div className=\"form__field\">\n          <input\n            className={`form__input ${this.state.imdbIdError\n              && 'form__input--error'}`}\n            type=\"text\"\n            placeholder=\"Film id on IMDb\"\n            name=\"imdbId\"\n            value={this.state.imdbId}\n            onChange={this.onInputChange}\n            onBlur={this.onBlurHandle}\n            required\n          />\n          {\n            this.state.imdbIdError\n            && <ErrorMessage message={this.state.imdbIdError} />\n          }\n        </div>\n        <button\n          className=\"form__submit\"\n          type=\"submit\"\n          disabled={\n            !this.state.titleValid || !this.state.imgUrlValid\n            || !this.state.imdbUrlValid || !this.state.imdbIdValid\n          }\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}